/*
身份证号码合法性判断
问题描述：
 我国公民的身份证号码特点如下： 
1、     长度为18位；
2、     第1～17位只能为数字；
3、     第18位可以是数字或者小写英文字母x。
4、     身份证号码的第7~14位表示持有人生日的年、月、日信息。
例如：511002198808080111或51100219880808011x。
 请实现身份证号码合法性判断的函数。除满足以上要求外，需要对持有人生日的年、月、日信息进行校验。
 年份大于等于1900年，小于等于2100年。需要考虑闰年、大小月的情况。所谓闰年，能被4整除且不能被100整除 或 能被400整除的年份，闰年的2月份为29天，非闰年的2月份为28天。
 其他情况的合法性校验，考生不用考虑。
函数返回值：
1）  如果身份证号合法，返回0；
2）  如果身份证号长度不合法，返回1；
3）  如果身份证号第1~17位含有非数字的字符，返回2；
4）  如果身份证号第18位既不是数字也不是英文小写字母x，返回3；
5）  如果身份证号的年信息非法，返回4；
6）  如果身份证号的月信息非法，返回5；
7）  如果身份证号的日信息非法，返回6（请注意闰年的情况）；
【注】除成功的情况外，以上其他合法性判断的优先级依次降低。也就是说，如果判断出长度不合法，直接返回1即可，不需要再做其他合法性判断。
 要求实现函数：
int verifyIDCard(char* input)
【输入】  char* input，表示输入的身份证号码字符串
【输出】  无
【返回】  判断的结果，类型为int
 示例
1） 输入：”511002111222”，函数返回值：1；
2） 输入：”511002abc123456789”，函数返回值：2；
3） 输入：”51100219880808123a”，函数返回值：3；
4） 输入：”511002188808081234”，函数返回值：4；
5） 输入：”511002198813081234”，函数返回值：5；
6） 输入：”511002198808321234”，函数返回值：6；
7） 输入：”511002198902291234”，函数返回值：7；
8） 输入：”511002198808081234”，函数返回值：0；
*/
#include <iostream>
#include <string>
#include <ctype.h>
using namespace std;
 
int IsRuinian(int x){ //是闰年，返回1，否则返回0
	if(x%4==0&&x%100!=0||x%400==0){ //此处判断输入的年份能整除4并且不能整除100，或者直接能整除400
		return 1;
	}
	return 0;
}
 
int verifyIDCard(string str){
	if(str.length()<18){//判断身份证长度是否符合要求
		return 1;
	}
	else { //当长度不符合的时候，以下的所有判断无需验证
		for(int i=0;i<str.length()-1;i++){ //循环检查前17位是不是数字字符，有一个不是就直接返回2
			if(!isdigit(str[i])){
				return 2;
			}
		}
		if(!isdigit(str[str.length()-1])&&str[str.length()-1]!='x'){ //此条件就是判断第18位既不是数字也不是x就返回3
			return 3;
		}
		int sum = 0; //年份变量初始化0
		for(int i=6;i<=9;i++) { //这个循环是用来拿年份
			sum=sum*10+str[i]-'0';	 
			//此处的减去字符0是用来减去对应的ascll码值48，因为直接获取字符串的对应字符时，获取到的是ascll码值，而我们却要数值计算，所以直接以ascll码值来算。
		}
		if(sum>2100||sum<1900){//判断年份是不是范围要求内,不是就返回4
			return 4;
		}
		int monthsum=0;//月份初始化0
		for(int i=10;i<=11;i++){ //取出对应的月份
			monthsum=monthsum*10+str[i]-'0';
		}
		if(monthsum>12||monthsum<1){ //判断月份是否符合，不符合返回5
			return 5;
		}
		int daysum=0;//日初始化0
		for(int i=12;i<=13;i++){ //获取对应的日
			daysum=daysum*10+str[i]-'0';
		}
		if(IsRuinian(sum)&&monthsum==2&&daysum>29 || !IsRuinian(sum)&&monthsum==2&&daysum>28 || daysum>31 ||daysum==0){ //不符合条件的返回6
			/*
				if里面也是按照从左到右来的
				判断是否是闰年，并且是不是2月，是不是大于29号
				或者判断不是闰年，是不是2月，是不是大于28号
				前两个都是判断闰年平年的2月的日期是不是正常，都不符合，那就是普通月份和日。
				判断天数是不是大于31号，或者直接0号的
			*/
			return 6;
		}
	}
	return 0; //如果全部都符合，则返回0
}
int main(){
	string str;
	while(cin>>str) {
		cout<<verifyIDCard(str)<<endl;
	}
	return 0;
}
